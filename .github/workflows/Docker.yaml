name: 'docker'

on:
  push:
    branches:
    - adding-github
    - main

permissions:
  id-token: write
  contents: read

jobs:
  docker:
    name: 'Docker CI/CD'
    runs-on: ubuntu-latest
    
    env:
      AWS_REGION: us-east-1
      EKS_CLUSTER_NAME: eks-vic

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v1


    # Check AWS credentials 
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ env.AWS_REGION }}
        # role-to-assume: arn:aws:iam::533267153411:role/role_for_tf
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
    
    # Login to the ECR
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    # Docker Build, Tag and Push
    - name: Build, tag, and push image to Amazon ECR
      id: docker-push
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: httpbin
        IMAGE_TAG: latest
        url: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      run: |
        docker build -t $url .
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"


    - name: Update Helm With My New Image
      id: helm-upgrade
      env:
        ECR_REGISTRY: ${{ steps.docker-push.outputs.registry }}
        ECR_REPOSITORY: httpbin
        HELM_NAME: httpbin
        IMAGE_TAG: latest
        url: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      run: |
        helm upgrade $HELM_NAME httpbingo --set image.repository=$ECR_REGISTRY/$ECR_REPOSITORY,image.tag=$IMAGE_TAG
      

    - name: Deploy to EKS
      run: |
        aws eks --region $AWS_REGION update-kubeconfig --name $EKS_CLUSTER_NAME
        kubectl get svc vic-ns
        helm list -n vic-ns
