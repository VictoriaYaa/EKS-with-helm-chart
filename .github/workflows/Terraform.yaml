name: 'terraform'

on:
  push:
    branches:
    - adding-github
    - main

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: 'Terraform CI'
    runs-on: ubuntu-latest
    
    env:
      AWS_REGION: us-east-1
      EKS_CLUSTER_NAME: eks-vic

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v1

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1


    # Check AWS credentials 
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ env.AWS_REGION }}
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
    

    # # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    # - name: Terraform Init
    #   id: init
    #   run: terraform init

    
    # # Validate the configuration files
    # - name: Terraform Validate
    #   run: terraform validate

    # - name: Validate failed
    #   if: ${{ failure() && steps.validate.outputs.failure-reason == 'validate-failed' }}
    #   run: echo "terraform validate failed"
    
    - name: Setup kubeconfig
      id: setup-kubeconfig
      run: |
        aws eks --region $AWS_REGION update-kubeconfig --name $EKS_CLUSTER_NAME
      

    - name: Deploy to EKS
      run: |
        kubectl get services -o wide

    # - name: Update Kube Config
    #   run: |
    #     aws eks update-kubeconfig --name eks-vic --region us-east-1
    #     export KUBECONFIG="~/.kube/config"

    #     aws eks get-token --cluster-name eks-vic

 # echo "kubectl get all"
        # kubectl get all

        # echo "kubectl get nodes -o wide"
        # kubectl get nodes -o wide

        # echo "kubectl get pods -o wide"
        # kubectl get pods -o wide

        # echo "kubectl get svc"
        # kubectl get svc
    # # Generates an execution plan for Terraform
    # - name: Terraform Plan
    #   id: plan
    #   run: terraform plan 